name: Build

on:
  pull_request:
  push:
    branches:
      - 'main'

  workflow_dispatch:
    inputs:
      app_id:
        description: 'The application Id of the current build'
        required: true
      branch:
        description: 'The branch from which we have to build'
        required: true

jobs:
  build:
    name: Setup Environment and build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code to specific branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Prepare Keystore
        id: write_file
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'keystore.jks'
          encodedString: ${{ secrets.SIGNING_KEY }}

      - name: Preparing keystore file
        env:
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          ALIAS: ${{ vars.ALIAS }}
          STORE_FILE: ${{ steps.write_file.outputs.filePath }}
        run:
          echo -e "storePassword=$KEY_STORE_PASSWORD\n
          keyPassword=$KEY_PASSWORD\n
          keyAlias=$ALIAS\n
          storeFile=$STORE_FILE" > ./keystore.properties

      - name: Decode google-services.json
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
        run: echo $FIREBASE_CONFIG > app/google-services.json

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
              
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Unit tests
        run: ./gradlew test --stacktrace

      - name: Generate app bundle
        run: ./gradlew bundleRelease --stacktrace

      - name: Generate apk
        run: ./gradlew assembleRelease --stacktrace

      - name: Upload Bundle
        uses: actions/upload-artifact@v3
        with:
          name: Apk and Bundle
          path: |
            app/build/outputs/bundle/release/*.aab
            app/build/outputs/apk/release/*.apk

      - name: Upload Test results
        uses: actions/upload-artifact@v3
        with:
          name: TestResults
          path: app/build/reports/tests

  # Step 2 : Upload the Artifact
  #upload:
  #  needs: [ build ]
  #  name: Upload the signed artifact
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Upload Bundle
  #      uses: actions/upload-artifact@v3
  #      with:
  #        name: signed_app_bundle
  #        path: app/build/outputs/bundle/release/*.aab

  #    - name: Upload Test results
  #      uses: actions/upload-artifact@v3
  #      with:
  #        name: test_reports
  #        path: app/build/reports/tests

  # Step 3 : Release to playstore
