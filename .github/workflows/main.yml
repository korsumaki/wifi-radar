name: Android Build and Deployment Pipeline

on:
  push:
    branches:
      - 'main'

  workflow_dispatch:
    inputs:
      app_id:
        description: 'The application Id of the current build'
        required: true
      branch:
        description: 'The branch from which we have to build'
        required: true

jobs:
  build:
    name: Setup Environment and build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code to specific branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}
          
      - name: Prepare Keystore
        id: write_file
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'keystore.jks'
          fileDir: './'
          encodedString: ${{ secrets.SIGNING_KEY }}

      #- run: echo plainVariable=${{ vars.PLAIN_VARIABLE }} >> ./testing.properties
      #- run: echo plainVariable2=${{ vars.PLAIN_VARIABLE }} >> ./testing.properties
      #- run:
      #    echo -e "plainVariable3=${{ vars.PLAIN_VARIABLE }} \n
      #    plainVariable4=${{ vars.PLAIN_VARIABLE }}" >> ./testing.properties
      #- run: cat ./testing.properties
      
      #- name: Testing files
      #  env:
      #    PLAIN_VARIABLE: ${{ vars.PLAIN_VARIABLE }}
      #  run:
      #    echo plainVariable=$PLAIN_VARIABLE > ./testing.properties
      #    cat ./testing.properties

      - name: Preparing files
        env:
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          ALIAS: ${{ secrets.ALIAS }}
          #STORE_FILE: 'keystore.jks'
          STORE_FILE: ${{ steps.write_file.outputs.filePath }}
        run:
          echo -e "storePassword=$KEY_STORE_PASSWORD\n
          echo keyPassword=$KEY_PASSWORD\n
          echo keyAlias=$ALIAS\n
          echo storeFile=./keystore.properties" > ./keystore.properties
          #echo storeFile=../$STORE_FILE" > ./keystore.properties
          #echo storeFile=keystore/keystore.jks >> ./keystore.properties

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
              
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Unit tests
        run: bash ./gradlew test --stacktrace

      # Decode Google services configuration file
      #- name: Decode google-services.json
      #  env:
      #    FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
      #  run: echo $FIREBASE_CONFIG > app/google-services.json

      #- name: Generate app bundle
      #  run: ./gradlew app:bundleRelease --stacktrace

      #- name: Sign app bundle
      #  run: |
      #    jarsigner -keystore app/*.jks \
      #    -storepass ${{ secrets.KEY_STORE_PASSWORD }} -keypass ${{ secrets.KEY_PASSWORD }} \
      #    app/build/outputs/bundle/release/app-release.aab ${{ secrets.ALIAS }}
  # Step 2 : Upload the Artifact
  # Step 3 : Release to playstore
